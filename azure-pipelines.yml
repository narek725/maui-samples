# https://aka.ms/yaml

trigger:
- main
- develop

pr:
- main
- develop

variables:
  IsRunningOnCI: true
  DotNetVersion: 6.0.100-preview.4.21255.9
  DotNet.Cli.Telemetry.OptOut: true
  MauiCheck.Version: 0.4.1
  MauiCheck.Manifest: https://raw.githubusercontent.com/Redth/dotnet-maui-check/main/manifests/maui-dev.manifest.json

jobs:
- job: windows
  pool:
    vmImage: windows-latest
  variables:
    LogDirectory: $(Build.ArtifactStagingDirectory)\logs
  steps:
    - powershell: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
        & .\dotnet-install.ps1 -Version $(DotNetVersion) -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
        & dotnet --list-sdks
      displayName: install .NET $(DotNetVersion)
      errorActionPreference: stop

    - powershell: |
        & dotnet tool update --global redth.net.maui.check --version $(MauiCheck.Version) --add-source https://api.nuget.org/v3/index.json
        & maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --manifest $(MauiCheck.Manifest)
      displayName: maui-check
      errorActionPreference: stop

    - powershell: |
        & dotnet build net6-samples.sln -c Debug   -bl:$(LogDirectory)\Debug.binlog
        & dotnet build net6-samples.sln -c Release -bl:$(LogDirectory)\Release.binlog
      displayName: build samples
      errorActionPreference: stop

    - task: MSBuild@1
      inputs:
        solution: HelloMauiWinUI3/HelloMauiWinUI3.sln
        msbuildArguments: -restore -p:Configuration=Debug -bl:$(Build.ArtifactStagingDirectory)\logs\WinUI3-Debug.binlog
      displayName: build WinUI3 Debug

    - task: MSBuild@1
      inputs:
        solution: HelloMauiWinUI3/HelloMauiWinUI3.sln
        msbuildArguments: -p:Configuration=Release -bl:$(LogDirectory)\WinUI3-Release.binlog
      displayName: build WinUI3 Release

    - task: CopyFiles@2
      displayName: copy artifacts
      inputs:
        contents: '*Android\**\*-Signed.apk'
        targetFolder: $(Build.ArtifactStagingDirectory)
        overWrite: true
      condition: always()

    - task: PublishPipelineArtifact@1
      displayName: publish artifacts
      inputs:
        artifactName: windows-artifacts
        targetPath: $(Build.ArtifactStagingDirectory)
      condition: always()

- job: mac
  timeoutInMinutes: 120
  pool:
    vmImage: macOS-latest
  variables:
    - name: LogDirectory
      value: $(Build.ArtifactStagingDirectory)/logs
    - name: DotNet.Root
      value: /usr/local/share/dotnet/
    - name: DotNet.Tools
      value: ~/.dotnet/tools
  steps:
    - task: UseDotNet@2
      displayName: install .NET Core 3.1
      inputs:
        version: 3.1.x
        installationPath: $(DotNet.Root)

    - bash: >
        export PATH="$(DotNet.Root):$(DotNet.Tools):$PATH" &&
        curl -L https://raw.githubusercontent.com/dotnet/install-scripts/7a9d5dcab92cf131fc2d8977052f8c2c2d540e22/src/dotnet-install.sh > dotnet-install.sh &&
        sh dotnet-install.sh --version $(DotNetVersion) --install-dir $DOTNET_ROOT --verbose &&
        dotnet --list-sdks &&
        echo "##vso[task.setvariable variable=PATH]$PATH"
      displayName: install .NET $(DotNetVersion)

    - bash: >
        dotnet tool update --global redth.net.maui.check --version $(MauiCheck.Version) --add-source https://api.nuget.org/v3/index.json &&
        maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --manifest $(MauiCheck.Manifest)
      displayName: maui-check

    - bash: sudo xcode-select -s /Applications/Xcode_12.4.app
      displayName: select Xcode 12.4

    - bash: |
        set -x
        mkdir -p ~/Library/Preferences/Xamarin
        rm -f ~/Library/Preferences/Xamarin/Settings.plist
        /usr/libexec/PlistBuddy -c "add :AppleSdkRoot string $(dirname $(dirname $(xcode-select -p)))" ~/Library/Preferences/Xamarin/Settings.plist || true
        cat ~/Library/Preferences/Xamarin/Settings.plist || true
      displayName: configure vsmac xcode

    - bash: |
        dotnet build net6-samples.sln -c Debug   -bl:$(LogDirectory)/Debug.binlog &&
        dotnet build net6-samples.sln -c Release -bl:$(LogDirectory)/Release.binlog
      displayName: build samples

    - bash: |
        dotnet build vs/net6-samples-mac.sln -c Debug   -bl:$(LogDirectory)/Debug-Mac.binlog &&
        dotnet build vs/net6-samples-mac.sln -c Release -bl:$(LogDirectory)/Release-Mac.binlog
      displayName: build macOS-only samples

    - task: CopyFiles@2
      displayName: copy artifacts
      inputs:
        contents: |
          *Android/**/*-Signed.apk
          *iOS/**/*.app/**
          *Mac*/**/*.app/**
        targetFolder: $(Build.ArtifactStagingDirectory)
        overWrite: true
      condition: always()

    - task: PublishPipelineArtifact@1
      displayName: publish artifacts
      inputs:
        artifactName: mac-artifacts
        targetPath: $(Build.ArtifactStagingDirectory)
      condition: always()
